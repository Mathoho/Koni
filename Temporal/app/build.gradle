/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java application project to get you started.
 * For more details take a look at the 'Building Java & JVM projects' chapter in the Gradle
 * User Manual available at https://docs.gradle.org/7.2/userguide/building_java_projects.html
 */

plugins {
    // Apply the application plugin to add support for building a CLI application in Java.
    id 'application'
    //id 'java'
    //id 'io.vertx.vertx-plugin' version '0.0.4'
    //id 'io.vertx.vertx-plugin' version '3.5.0'
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}
//ext {
  //  javaSDKVersion = '1.18.1'
//}
dependencies {
    implementation 'org.postgresql:postgresql:42.6.0'
    implementation group: 'io.temporal', name: 'temporal-sdk', version: '1.18.2'
    implementation group: 'org.slf4j',  name: 'slf4j-nop', version: '2.0.6'
    
    testImplementation group: 'io.temporal', name: 'temporal-testing', version: '1.18.2'
    testImplementation group: 'junit', name: 'junit', version: '4.13.2'
    testImplementation group: 'org.mockito', name: 'mockito-core', version: '5.1.1'
    
    // // These dependencies are used by the application.
    // implementation "io.temporal:temporal-sdk:$javaSDKVersion"
    // implementation "ch.qos.logback:logback-classic:1.2.11"

    // // Use JUnit test framework
    // testImplementation "io.temporal:temporal-testing:$javaSDKVersion"
    // testImplementation "junit:junit:4.13.2"
    // testImplementation "org.mockito:mockito-core:5.1.1"
}

application {
    // Define the main class for the application.
    mainClass = 'myTemporalapp.App'
}
task ConnectDataBase(type: JavaExec) {
    mainClass = 'myTemporalapp.ConnectDataBase'
    classpath = sourceSets.main.runtimeClasspath
}

task startWorker(type: JavaExec) {
    mainClass = 'myTemporalapp.MathWorker'
    classpath = sourceSets.main.runtimeClasspath
}
